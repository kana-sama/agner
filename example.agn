-native(operator:minus/2, "_binop__minus").
-operator(-/2, operator:minus/2).

-native(operator:plus/2, "_binop__plus").
-operator(+/2, operator:plus/2).

-native(agner:println/1, "_agner__println").

replicate(N) -> replicate(N, []).
replicate(0, Acc) -> Acc;
replicate(N, Acc) -> replicate(N-1, [{N}|Acc]).

length(List) -> length(List, 0).
length({}, Acc) -> Acc;
length({_,T}, Acc) -> length(T, Acc+1).

reverse(X) -> reverse(X, []).
reverse([], Acc) -> Acc;
reverse([H|T], Acc) -> reverse(T, [H|Acc]).

f(X) -> f(X, []).
f([], Acc) -> reverse(Acc);
f([{H}|T], Acc) -> f(T, [{H+1}|Acc]).

main() ->
  N = 10000,
  A = replicate(N),
  agner:println(A),
  ok.
